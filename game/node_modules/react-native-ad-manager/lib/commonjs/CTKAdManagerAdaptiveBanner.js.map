{"version":3,"names":["ComponentName","AdManagerAdaptiveBannerView","UIManager","getViewManagerConfig","requireNativeComponent","Error","LINKING_ERROR","AdaptiveBanner","React","Component","constructor","props","handleSizeChange","bind","state","style","shouldComponentUpdate","nextProps","nextState","Object","entries","toString","componentDidMount","loadBanner","dispatchViewManagerCommand","findNodeHandle","Commands","nativeEvent","height","width","setState","onSizeChange","render","event","onAdLoaded","onAdFailedToLoad","createErrorFromErrorData","error","onAppEvent","onAdOpened","onAdClosed"],"sources":["CTKAdManagerAdaptiveBanner.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  requireNativeComponent,\n  UIManager,\n  ViewProps,\n  findNodeHandle,\n  NativeSyntheticEvent,\n} from 'react-native';\nimport { createErrorFromErrorData } from './utils';\nimport type {\n  IAdManagerEventBase,\n  IAdManagerEventError,\n  IAdManagerEventAppEvent,\n  IAdManagerEventLoadedBanner,\n  IAdManagerEventSize,\n} from './AdManagerEvent';\nimport type { IAdManagerTargeting } from './AdManagerTypes';\nimport { LINKING_ERROR } from './Constants';\n\ninterface IAdManagerAdaptiveBannerPropsBase extends ViewProps {\n  /**\n   * Adaptive banner position.\n   */\n  adPosition?:\n    | 'currentOrientationAnchored'\n    | 'currentOrientationInline'\n    | 'portraitInline'\n    | 'landscapeInline'\n    | 'inline';\n\n  /**\n   * Max height of the adaptive banner. Only works with \"inline\" adPosition.\n   */\n  maxHeight?: number;\n\n  /**\n   * DFP ad unit ID\n   */\n  adUnitID?: string;\n\n  /**\n   * Array of test devices. Use Banner.simulatorId for the simulator\n   */\n  testDevices?: string[];\n\n  targeting?: IAdManagerTargeting;\n}\n\ninterface IAdManagerAdaptiveBannerProps\n  extends IAdManagerAdaptiveBannerPropsBase {\n  /**\n   * DFP library events\n   */\n  onSizeChange?: (event: IAdManagerEventSize) => void;\n  onAdLoaded?: (event: IAdManagerEventLoadedBanner) => void;\n  onAdFailedToLoad?: (error: Error) => void;\n  onAppEvent?: (event: IAdManagerEventAppEvent) => void;\n  onAdOpened?: (event: IAdManagerEventBase) => void;\n  onAdClosed?: (event: IAdManagerEventBase) => void;\n}\n\ninterface IAdManagerAdaptiveBannerState {\n  style: {\n    width?: number;\n    height?: number;\n  };\n}\n\ninterface IAdManagerAdaptiveBannerNativeProps\n  extends IAdManagerAdaptiveBannerPropsBase {\n  /**\n   * DFP library events\n   */\n  onSizeChange?: (event: NativeSyntheticEvent<IAdManagerEventSize>) => void;\n  onAdLoaded?: (\n    event: NativeSyntheticEvent<IAdManagerEventLoadedBanner>\n  ) => void;\n  onAdFailedToLoad?: (\n    event: NativeSyntheticEvent<IAdManagerEventError>\n  ) => void;\n  onAppEvent?: (event: NativeSyntheticEvent<IAdManagerEventAppEvent>) => void;\n  onAdOpened?: (event: NativeSyntheticEvent<IAdManagerEventBase>) => void;\n  onAdClosed?: (event: NativeSyntheticEvent<IAdManagerEventBase>) => void;\n}\n\nconst ComponentName = 'CTKAdaptiveBannerView';\n\nconst AdManagerAdaptiveBannerView =\n  UIManager.getViewManagerConfig(ComponentName) != null\n    ? requireNativeComponent<IAdManagerAdaptiveBannerNativeProps>(ComponentName)\n    : () => {\n        throw new Error(LINKING_ERROR);\n      };\n\nexport class AdaptiveBanner extends React.Component<\n  IAdManagerAdaptiveBannerProps,\n  IAdManagerAdaptiveBannerState\n> {\n  constructor(props: IAdManagerAdaptiveBannerProps) {\n    super(props);\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.state = {\n      style: {},\n    };\n  }\n\n  shouldComponentUpdate(\n    nextProps: IAdManagerAdaptiveBannerProps,\n    nextState: IAdManagerAdaptiveBannerState\n  ) {\n    if (\n      Object.entries(this.state.style).toString() ===\n        Object.entries(nextState.style).toString() &&\n      Object.entries(this.props).toString() ===\n        Object.entries(nextProps).toString()\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    this.loadBanner();\n  }\n\n  loadBanner() {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      UIManager.getViewManagerConfig(ComponentName).Commands.loadBanner,\n      []\n    );\n  }\n\n  handleSizeChange({ nativeEvent }: NativeSyntheticEvent<IAdManagerEventSize>) {\n    const { height, width } = nativeEvent;\n    this.setState({ style: { width, height } });\n    this.props.onSizeChange && this.props.onSizeChange(nativeEvent);\n  }\n\n  render() {\n    return (\n      <AdManagerAdaptiveBannerView\n        {...this.props}\n        style={[this.props.style, this.state.style]}\n        onSizeChange={this.handleSizeChange}\n        onAdLoaded={(event) =>\n          this.props.onAdLoaded && this.props.onAdLoaded(event.nativeEvent)\n        }\n        onAdFailedToLoad={(event) =>\n          this.props.onAdFailedToLoad &&\n          this.props.onAdFailedToLoad(\n            createErrorFromErrorData(event.nativeEvent.error)\n          )\n        }\n        onAppEvent={(event) =>\n          this.props.onAppEvent && this.props.onAppEvent(event.nativeEvent)\n        }\n        onAdOpened={(event) =>\n          this.props.onAdOpened && this.props.onAdOpened(event.nativeEvent)\n        }\n        onAdClosed={(event) =>\n          this.props.onAdClosed && this.props.onAdClosed(event.nativeEvent)\n        }\n      />\n    );\n  }\n}\n"],"mappings":"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"}