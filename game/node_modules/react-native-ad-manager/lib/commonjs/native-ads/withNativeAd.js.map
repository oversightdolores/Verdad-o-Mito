{"version":3,"names":["areSetsEqual","a","b","size","aItem","has","ComponentName","NativeAdView","UIManager","getViewManagerConfig","requireNativeComponent","Error","LINKING_ERROR","Component","NativeAdWrapper","React","constructor","props","Map","child","handle","findNodeHandle","clickableChildrenNodeHandles","set","setState","clickableChildren","state","add","newClickableChildren","Set","delete","get","nativeEvent","height","width","style","onSizeChange","nativeAd","onAdLoaded","componentDidMount","reloadAd","shouldComponentUpdate","nextProps","nextState","Object","entries","toString","componentDidUpdate","_","prevState","clickableChildrenChanged","viewHandle","NativeAdsManager","registerViewsForInteractionAsync","then","catch","dispatchViewManagerCommand","Commands","renderAdComponent","componentProps","register","registerClickableChild","unregister","unregisterClickableChild","render","_a","adsManager","rest","stripProperties","adSize","adLoaderIndex","correlator","customTemplateIds","validAdSizes","validAdTypes","handleSizeChange","handleAdLoaded","event","onAdFailedToLoad","createErrorFromErrorData","error","onAppEvent","onAdOpened","onAdClosed","onAdCustomClick","targeting","customClickTemplateIds","toJSON"],"sources":["withNativeAd.tsx"],"sourcesContent":["import React, { JSXElementConstructor } from 'react';\nimport {\n  findNodeHandle,\n  NativeSyntheticEvent,\n  requireNativeComponent,\n  UIManager,\n  ViewProps,\n} from 'react-native';\nimport { TriggerableContext } from './TriggerableViewManager';\nimport { NativeAdsManager } from './NativeAdsManager';\nimport type {\n  IAdManagerTargeting,\n  TReactNodeHandleRef,\n} from '../AdManagerTypes';\nimport type {\n  IAdManagerEventBase,\n  IAdManagerEventCustomClick,\n  IAdManagerEventAppEvent,\n  IAdManagerEventLoadedBanner,\n  IAdManagerEventLoadedNative,\n  IAdManagerEventLoadedTemplate,\n  IAdManagerEventSize,\n  IAdManagerEventError,\n} from '../AdManagerEvent';\nimport { createErrorFromErrorData, stripProperties } from '../utils';\nimport { LINKING_ERROR } from '../Constants';\n\n/*\n@property (nonatomic, copy) NSDictionary *targeting;\n\n */\ninterface INativeAdPropsBase extends ViewProps {\n  adSize?: string;\n  correlator?: string;\n  customTemplateIds?: string[];\n  validAdSizes?: string[];\n  validAdTypes?: ('banner' | 'native' | 'template')[];\n  customClickTemplateIds?: string[];\n  targeting?: IAdManagerTargeting;\n}\n\ninterface INativeAdNativeProps extends INativeAdPropsBase {\n  children: React.ReactNode;\n  adsManager: string;\n  loaderIndex?: string;\n  onSizeChange?: (event: NativeSyntheticEvent<IAdManagerEventSize>) => void;\n  onAdLoaded?: (\n    event: NativeSyntheticEvent<\n      | IAdManagerEventLoadedBanner\n      | IAdManagerEventLoadedTemplate\n      | IAdManagerEventLoadedNative\n    >\n  ) => void;\n  onAdFailedToLoad?: (\n    event: NativeSyntheticEvent<IAdManagerEventError>\n  ) => void;\n  onAppEvent?: (event: NativeSyntheticEvent<IAdManagerEventAppEvent>) => void;\n  onAdOpened?: (event: NativeSyntheticEvent<IAdManagerEventBase>) => void;\n  onAdClosed?: (event: NativeSyntheticEvent<IAdManagerEventBase>) => void;\n  onAdCustomClick?: (\n    event: NativeSyntheticEvent<IAdManagerEventCustomClick>\n  ) => void;\n}\n\ninterface INativeAdProps extends INativeAdPropsBase {\n  adsManager: NativeAdsManager;\n  adLoaderIndex?: string;\n  onSizeChange?: (event: IAdManagerEventSize) => void;\n  onAdLoaded?: (\n    event:\n      | IAdManagerEventLoadedBanner\n      | IAdManagerEventLoadedTemplate\n      | IAdManagerEventLoadedNative\n  ) => void;\n  onAdFailedToLoad?: (error: Error) => void;\n  onAppEvent?: (event: IAdManagerEventAppEvent) => void;\n  onAdOpened?: (event: IAdManagerEventBase) => void;\n  onAdClosed?: (event: IAdManagerEventBase) => void;\n  onAdCustomClick?: (event: IAdManagerEventCustomClick) => void;\n}\n\ninterface INativeAdState {\n  clickableChildren: Set<TReactNodeHandleRef>;\n  style: {\n    width?: number;\n    height?: number;\n  };\n  nativeAd?:\n    | IAdManagerEventLoadedBanner\n    | IAdManagerEventLoadedTemplate\n    | IAdManagerEventLoadedNative;\n}\n\nconst areSetsEqual = (\n  a: Set<TReactNodeHandleRef>,\n  b: Set<TReactNodeHandleRef>\n) => {\n  if (a.size !== b.size) return false;\n  for (const aItem of a) {\n    if (!b.has(aItem)) return false;\n  }\n  return true;\n};\n\nconst ComponentName = 'CTKAdManageNative';\n\nconst NativeAdView =\n  UIManager.getViewManagerConfig(ComponentName) != null\n    ? requireNativeComponent<INativeAdNativeProps>(ComponentName)\n    : () => {\n        // eslint-disable-next-line no-undef\n        throw new Error(LINKING_ERROR);\n      };\n\nexport default (Component: JSXElementConstructor<any>) =>\n  class NativeAdWrapper extends React.Component<\n    INativeAdProps,\n    INativeAdState\n  > {\n    clickableChildrenNodeHandles = new Map();\n\n    constructor(props: INativeAdProps) {\n      super(props);\n      this.state = {\n        // iOS requires a non-null value\n        clickableChildren: new Set(),\n        style: {},\n      };\n    }\n\n    componentDidMount() {\n      this.reloadAd();\n    }\n\n    registerClickableChild = (child: TReactNodeHandleRef) => {\n      const handle = findNodeHandle(child);\n      if (!handle) {\n        return;\n      }\n      this.clickableChildrenNodeHandles.set(child, handle);\n      this.setState({\n        clickableChildren: this.state.clickableChildren.add(handle),\n      });\n    };\n\n    unregisterClickableChild = (child: TReactNodeHandleRef) => {\n      this.setState(({ clickableChildren }) => {\n        const newClickableChildren = new Set(clickableChildren);\n        newClickableChildren.delete(\n          this.clickableChildrenNodeHandles.get(child)\n        );\n        this.clickableChildrenNodeHandles.delete(child);\n        return { clickableChildren: newClickableChildren };\n      });\n    };\n\n    handleSizeChange = ({\n      nativeEvent,\n    }: NativeSyntheticEvent<IAdManagerEventSize>) => {\n      const { height, width } = nativeEvent;\n      this.setState({ style: { width, height } });\n      this.props.onSizeChange && this.props.onSizeChange(nativeEvent);\n    };\n\n    handleAdLoaded = ({\n      nativeEvent,\n    }: NativeSyntheticEvent<\n      | IAdManagerEventLoadedBanner\n      | IAdManagerEventLoadedTemplate\n      | IAdManagerEventLoadedNative\n    >) => {\n      this.setState({ nativeAd: nativeEvent });\n      this.props.onAdLoaded && this.props.onAdLoaded(nativeEvent);\n    };\n\n    shouldComponentUpdate(\n      nextProps: INativeAdProps,\n      nextState: INativeAdState\n    ) {\n      if (\n        Object.entries(this.state).toString() ===\n          Object.entries(nextState).toString() &&\n        Object.entries(this.props).toString() ===\n          Object.entries(nextProps).toString()\n      ) {\n        return false;\n      }\n      return true;\n    }\n\n    componentDidUpdate(_: INativeAdProps, prevState: INativeAdState) {\n      const clickableChildrenChanged = areSetsEqual(\n        prevState.clickableChildren,\n        this.state.clickableChildren\n      );\n      if (clickableChildrenChanged) {\n        const viewHandle = findNodeHandle(this);\n        if (!viewHandle) {\n          // Skip registration if the view is no longer valid.\n          return;\n        }\n\n        NativeAdsManager.registerViewsForInteractionAsync(viewHandle, [\n          ...this.state.clickableChildren,\n        ])\n          .then(() => {\n            // do nothing for now\n          })\n          .catch(() => {\n            // do nothing for now\n          });\n      }\n    }\n\n    reloadAd() {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this),\n        UIManager.getViewManagerConfig(ComponentName).Commands.reloadAd,\n        []\n      );\n    }\n\n    renderAdComponent(componentProps: INativeAdProps) {\n      if (!this.state.nativeAd) {\n        return null;\n      }\n\n      return (\n        <TriggerableContext.Provider\n          value={{\n            register: this.registerClickableChild,\n            unregister: this.unregisterClickableChild,\n          }}\n        >\n          <Component {...componentProps} nativeAd={this.state.nativeAd} />\n        </TriggerableContext.Provider>\n      );\n    }\n\n    render() {\n      // Cast to any until https://github.com/Microsoft/TypeScript/issues/10727 is resolved\n      const _a = this.props,\n        { adsManager } = _a,\n        rest = stripProperties(_a, ['adsManager', 'onAdLoaded']);\n\n      return (\n        <NativeAdView\n          style={[this.props.style, this.state.style]}\n          adSize={this.props.adSize}\n          loaderIndex={this.props.adLoaderIndex}\n          correlator={this.props.correlator}\n          customTemplateIds={this.props.customTemplateIds}\n          validAdSizes={this.props.validAdSizes}\n          validAdTypes={this.props.validAdTypes}\n          onSizeChange={this.handleSizeChange}\n          onAdLoaded={this.handleAdLoaded}\n          onAdFailedToLoad={(event) =>\n            this.props.onAdFailedToLoad &&\n            this.props.onAdFailedToLoad(\n              createErrorFromErrorData(event.nativeEvent.error)\n            )\n          }\n          onAppEvent={(event) =>\n            this.props.onAppEvent && this.props.onAppEvent(event.nativeEvent)\n          }\n          onAdOpened={(event) =>\n            this.props.onAdOpened && this.props.onAdOpened(event.nativeEvent)\n          }\n          onAdClosed={(event) =>\n            this.props.onAdClosed && this.props.onAdClosed(event.nativeEvent)\n          }\n          onAdCustomClick={(event) =>\n            this.props.onAdCustomClick &&\n            this.props.onAdCustomClick(event.nativeEvent)\n          }\n          targeting={this.props.targeting}\n          customClickTemplateIds={this.props.customClickTemplateIds}\n          adsManager={adsManager.toJSON()}\n        >\n          {this.renderAdComponent(rest)}\n        </NativeAdView>\n      );\n    }\n  };\n"],"mappings":"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"}