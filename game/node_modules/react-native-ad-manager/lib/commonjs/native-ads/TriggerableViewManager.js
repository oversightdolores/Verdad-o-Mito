"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TriggerableView = exports.TriggerableContext = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
const TriggerableContext = /*#__PURE__*/_react.default.createContext({
  register: child => {
    throw new Error('Stub! ' + child);
  },
  unregister: child => {
    throw new Error('Stub! ' + child);
  }
});
exports.TriggerableContext = TriggerableContext;
class TriggerableViewChild extends _react.default.Component {
  constructor() {
    super(...arguments);
    _defineProperty(this, "wrapperRef", null);
    _defineProperty(this, "handleWrapperRef", ref => {
      if (this.wrapperRef) {
        this.context.unregister(this.wrapperRef);
        this.wrapperRef = null;
      }
      if (ref) {
        this.context.register(ref);
        this.wrapperRef = ref;
      }
    });
  }
  render() {
    return /*#__PURE__*/_react.default.createElement(_reactNative.Text, _extends({}, this.props, {
      ref: this.handleWrapperRef
    }));
  }
}
_defineProperty(TriggerableViewChild, "contextType", TriggerableContext);
class TriggerableView extends _react.default.Component {
  render() {
    return /*#__PURE__*/_react.default.createElement(TriggerableContext.Consumer, null, contextValue => /*#__PURE__*/_react.default.createElement(TriggerableViewChild, _extends({}, this.props, contextValue)));
  }
}
exports.TriggerableView = TriggerableView;
//# sourceMappingURL=TriggerableViewManager.js.map