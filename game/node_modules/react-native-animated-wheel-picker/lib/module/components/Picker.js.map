{"version":3,"names":["View","StyleSheet","React","Animated","Easing","Extrapolate","interpolate","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withTiming","PanGestureHandler","GestureHandlerRootView","snapPoint","MaskedView","Picker","itemHeight","pickerData","visible","textStyle","maskedComponents","contentContainerStyle","initialIndex","onSelected","props","styles","container","duration","PickerItem","translateY","snapPoints","Array","length","fill","map","_","i","timingConfig","easing","bezier","wrapper","index","onGestureEvent","onStart","_event","ctx","y","value","onActive","translationY","onEnd","velocityY","snapPointY","Math","abs","animatedStyle","transform","height","paddingTop","item","trunc","backgroundColor","absoluteFillObject","flex","Item","data","CLAMP","textAnimation","opacity","scale","perspective","rotateX","textContainer","title","create","overflow","justifyContent","alignItems"],"sources":["Picker.tsx"],"sourcesContent":["import {\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport React from 'react';\nimport Animated, {\n  Easing,\n  Extrapolate,\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandlerGestureEvent,\n  PanGestureHandler,\n  GestureHandlerRootView,\n} from 'react-native-gesture-handler';\nimport { snapPoint } from 'react-native-redash';\nimport MaskedView from '@react-native-masked-view/masked-view';\n\nexport type PickerData = {\n  title: string;\n  value: any;\n};\nexport type PickerProps = ViewProps & {\n  itemHeight?: number;\n  pickerData: PickerData[];\n  initialIndex?: number;\n  visible?: number;\n  textStyle?: StyleProp<TextStyle>;\n  maskedComponents?: JSX.Element | JSX.Element[];\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  onSelected: (data: PickerData, index: number) => void;\n};\nconst Picker = ({\n  itemHeight = 30,\n  pickerData,\n  visible = 5,\n  textStyle,\n  maskedComponents,\n  contentContainerStyle,\n  initialIndex = 0,\n  onSelected,\n  ...props\n}: PickerProps) => {\n  return (\n    <View {...props} style={[styles.container]}>\n      <PickerItem\n        itemHeight={itemHeight}\n        pickerData={pickerData}\n        visible={visible}\n        textStyle={textStyle ?? {}}\n        maskedComponents={maskedComponents}\n        contentContainerStyle={contentContainerStyle}\n        initialIndex={initialIndex}\n        onSelected={onSelected}\n      />\n    </View>\n  );\n};\n\ntype PickerItemProps = Required<\n  Pick<\n    PickerProps,\n    'itemHeight' | 'pickerData' | 'visible' | 'textStyle' | 'initialIndex'\n  >\n> &\n  Pick<\n    PickerProps,\n    'maskedComponents' | 'onSelected' | 'contentContainerStyle'\n  >;\n\nconst duration = 1000;\nconst PickerItem = ({\n  itemHeight,\n  pickerData,\n  visible,\n  textStyle,\n  maskedComponents,\n  contentContainerStyle,\n  initialIndex,\n  onSelected,\n}: PickerItemProps) => {\n  const translateY = useSharedValue(-itemHeight * initialIndex);\n  const snapPoints = new Array(pickerData.length)\n    .fill(0)\n    .map((_, i) => i * -itemHeight);\n\n  const timingConfig = {\n    duration: duration,\n    easing: Easing.bezier(0.35, 1, 0.35, 1),\n  };\n\n  const wrapper = (index: number) => {\n    onSelected && onSelected(pickerData[index], index);\n  };\n\n  const onGestureEvent =\n    useAnimatedGestureHandler<PanGestureHandlerGestureEvent>({\n      onStart: (_event, ctx) => {\n        // @ts-ignore\n        ctx.y = translateY.value;\n        // triggered at the start of the pan gesture\n      },\n      onActive: ({ translationY }, ctx) => {\n        // @ts-ignore\n        translateY.value = translationY + ctx.y;\n        // triggered on every frame of the pan gesture\n      },\n      onEnd: ({ velocityY }) => {\n        const snapPointY = snapPoint(translateY.value, velocityY, snapPoints);\n        const index = Math.abs(snapPointY / itemHeight);\n        translateY.value = withTiming(snapPointY, timingConfig);\n        runOnJS(wrapper)(index);\n        // triggered at the end of the pan gesture\n      },\n    });\n  const animatedStyle = useAnimatedStyle(() => ({\n    transform: [{ translateY: translateY.value }],\n  }));\n\n  return (\n    <>\n      <MaskedView\n        androidRenderingMode=\"software\"\n        maskElement={\n          <View>\n            <Animated.View\n              style={[\n                animatedStyle,\n                contentContainerStyle,\n                {\n                  height: itemHeight * visible,\n                  paddingTop: (itemHeight * visible) / 2 - itemHeight / 2,\n                },\n              ]}\n            >\n              {pickerData.map((item, index) => (\n                <Item\n                  key={index}\n                  translateY={translateY}\n                  index={index}\n                  itemHeight={itemHeight}\n                  visible={visible}\n                  data={item}\n                  textStyle={textStyle}\n                />\n              ))}\n            </Animated.View>\n          </View>\n        }\n      >\n        {maskedComponents ? (\n          maskedComponents\n        ) : (\n          <>\n            <View\n              // eslint-disable-next-line react-native/no-inline-styles\n              style={{\n                height: itemHeight * Math.trunc(visible / 2),\n                backgroundColor: 'grey',\n              }}\n            />\n\n            <View\n              // eslint-disable-next-line react-native/no-inline-styles\n              style={{ height: itemHeight, backgroundColor: 'white' }}\n            />\n            <View\n              // eslint-disable-next-line react-native/no-inline-styles\n              style={{\n                height: itemHeight * Math.trunc(visible / 2),\n                backgroundColor: 'grey',\n              }}\n            />\n          </>\n        )}\n      </MaskedView>\n      <GestureHandlerRootView style={StyleSheet.absoluteFillObject}>\n        <PanGestureHandler onGestureEvent={onGestureEvent}>\n          <Animated.View\n            // eslint-disable-next-line react-native/no-inline-styles\n            style={{\n              flex: 1,\n            }}\n          />\n        </PanGestureHandler>\n      </GestureHandlerRootView>\n    </>\n  );\n};\n\ntype ItemProps = {\n  translateY: Animated.SharedValue<number>;\n  index: number;\n  data: PickerData;\n} & Required<Pick<PickerProps, 'itemHeight' | 'visible'>> &\n  Pick<PickerProps, 'textStyle'>;\nconst Item = ({\n  translateY,\n  index,\n  itemHeight,\n  visible,\n  data,\n  textStyle,\n}: ItemProps) => {\n  // const y = useDerivedValue(() => translateY.value, [translateY.value]);\n\n  const y = useDerivedValue(() =>\n    interpolate(\n      translateY.value / -itemHeight,\n      [index - visible / 2, index, index + visible / 2],\n      [-1, 0, 1],\n      Extrapolate.CLAMP\n    )\n  );\n\n  const textAnimation = useAnimatedStyle(() => {\n    return {\n      opacity: 1 / (1 + Math.abs(y.value)),\n      transform: [\n        {\n          scale: 1 - 0.1 * Math.abs(y.value),\n        },\n        {\n          perspective: 500,\n        },\n        {\n          rotateX: `${65 * y.value}deg`,\n        },\n      ],\n    };\n  });\n  return (\n    <View style={[styles.textContainer, { height: itemHeight }]}>\n      <Animated.Text style={[textAnimation, textStyle]}>\n        {data.title}\n      </Animated.Text>\n    </View>\n  );\n};\n\nexport default Picker;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  textContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"}